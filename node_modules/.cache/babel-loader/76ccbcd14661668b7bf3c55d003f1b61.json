{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\db test\\\\client\\\\src\\\\components\\\\AppRouter.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Routes, Redirect } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 50\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/User/Desktop/db test/client/src/components/AppRouter.jsx"],"names":["React","Component","Route","Routes","Redirect","authRoutes","publicRoutes","AppRouter","isAuth","map","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAG,KAAf;AAEA,sBACE,QAAC,MAAD;AAAA,eACGA,MAAM,IACLH,UAAU,CAACI,GAAX,CAAe;AAAA,UAAC;AAAEC,QAAAA,IAAF;AAAQT,QAAAA;AAAR,OAAD;AAAA,0BACb,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAES,IAAxB;AAA8B,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAvC;AAAgE,QAAA,KAAK;AAArE,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADa;AAAA,KAAf,CAFJ,EAKGJ,YAAY,CAACG,GAAb,CAAiB;AAAA,UAAC;AAAEC,QAAAA,IAAF;AAAQT,QAAAA;AAAR,OAAD;AAAA,0BAChB,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAES,IAAxB;AAA8B,QAAA,OAAO,EAAET,SAAvC;AAAkD,QAAA,KAAK;AAAvD,SAAYS,IAAZ;AAAA;AAAA;AAAA;AAAA,cADgB;AAAA,KAAjB,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;KAAMH,S;AAgBN,eAAeA,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Routes, Redirect } from 'react-router-dom';\r\n\r\nimport { authRoutes, publicRoutes } from '../routes';\r\n\r\nconst AppRouter = () => {\r\n  const isAuth = false;\r\n\r\n  return (\r\n    <Routes>\r\n      {isAuth &&\r\n        authRoutes.map(({ path, Component }) => (\r\n          <Route key={path} path={path} element={<Component></Component>} exact />\r\n        ))}\r\n      {publicRoutes.map(({ path, Component }) => (\r\n        <Route key={path} path={path} element={Component} exact />\r\n      ))}\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}