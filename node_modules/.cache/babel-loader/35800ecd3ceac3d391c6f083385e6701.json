{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\project\\\\front\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useContext, useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { check } from './htpp/userAPI';\nimport LoaderSpinner from './components/LoaderSpinner';\nimport AppRouter from './components/AppRouter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = use;\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    check.then(data => {\n      user.setIsUser(true); // значит польователь залогинился\n\n      user.setIsAuth(true);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoaderSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}, \"J7PPXooW06IQ11rfabbvgk72KFw=\")), \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/project/front/src/App.js"],"names":["React","Component","useContext","useEffect","useState","observer","check","LoaderSpinner","AppRouter","App","user","use","loading","setLoading","then","data","setIsUser","setIsAuth","finally"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAkE,OAAlE;AAIA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAGA,MAAMC,GAAG,MAAGJ,QAAQ,SAAC,MAAM;AAAA;;AAC3B,QAAM;AAACK,IAAAA;AAAD,MAAOC,GAAb;AACE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFQ,IADH,CACSC,IAAD,IAAU;AACdL,MAAAA,IAAI,CAACM,SAAL,CAAe,IAAf,EADc,CACQ;;AACtBN,MAAAA,IAAI,CAACO,SAAL,CAAe,IAAf;AACD,KAJH,EAKGC,OALH,CAKW,MAAML,UAAU,CAAC,KAAD,CAL3B;AAMD,GAPQ,EAON,EAPM,CAAT;;AAQA,MAAID,OAAJ,EAAa;AACX,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnBmB,kCAAX,iCAAT;;MAAMH,G;AAqBN,eAAeA,GAAf","sourcesContent":["import React, { Component, useContext, useEffect, useState } from 'react';\n\n\n\nimport { observer } from 'mobx-react-lite';\n\n\nimport { check } from './htpp/userAPI';\nimport LoaderSpinner from './components/LoaderSpinner';\nimport AppRouter from './components/AppRouter';\n\n\nconst App = observer(() => {\nconst {user}=use\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    check\n      .then((data) => {\n        user.setIsUser(true); // значит польователь залогинился\n        user.setIsAuth(true);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n  if (loading) {\n    return <LoaderSpinner />;\n  }\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}