{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\db test\\\\client\\\\src\\\\components\\\\AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useContext } from 'react';\nimport { Route, Routes, Redirect } from 'react-router-dom';\nimport { Context } from '..';\nimport { MainPage } from '../pages';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [user.isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 50\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this) // {<Component />} из масива routes.js\n      ;\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 48\n        }, this),\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppRouter, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/User/Desktop/db test/client/src/components/AppRouter.jsx"],"names":["React","Component","useContext","Route","Routes","Redirect","Context","MainPage","authRoutes","publicRoutes","AppRouter","user","isAuth","map","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,QAAT,QAAyB,UAAzB;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAWT,UAAU,CAACI,OAAD,CAA3B;AAEA,sBACE,QAAC,MAAD;AAAA,eACGK,IAAI,CAACC,MAAL,IACCJ,UAAU,CAACK,GAAX,CAAe;AAAA,UAAC;AAAEC,QAAAA,IAAF;AAAQb,QAAAA;AAAR,OAAD;AAAA,0BACb,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAEa,IAAxB;AAA8B,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAvC;AAAsD,QAAA,KAAK;AAA3D,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADa,CACkD;AADlD;AAAA,KAAf,CAFJ,EAKGL,YAAY,CAACI,GAAb,CAAiB;AAAA,UAAC;AAAEC,QAAAA,IAAF;AAAQb,QAAAA;AAAR,OAAD;AAAA,0BAChB,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAEa,IAAxB;AAA8B,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAvC;AAAsD,QAAA,KAAK;AAA3D,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADgB;AAAA,KAAjB,CALH,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAMJ,S;;KAAAA,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React, { Component, useContext } from 'react';\r\nimport { Route, Routes, Redirect } from 'react-router-dom';\r\nimport { Context } from '..';\r\nimport { MainPage } from '../pages';\r\n\r\nimport { authRoutes, publicRoutes } from '../routes';\r\n\r\nconst AppRouter = () => {\r\n  const { user } = useContext(Context);\r\n\r\n  return (\r\n    <Routes>\r\n      {user.isAuth &&\r\n        authRoutes.map(({ path, Component }) => (\r\n          <Route key={path} path={path} element={<Component />} exact /> // {<Component />} из масива routes.js\r\n        ))}\r\n      {publicRoutes.map(({ path, Component }) => (\r\n        <Route key={path} path={path} element={<Component />} exact />\r\n      ))}\r\n      <Route path=\"*\" element={<MainPage />} /> {/* если вдруг ничего не отработало*/}\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}